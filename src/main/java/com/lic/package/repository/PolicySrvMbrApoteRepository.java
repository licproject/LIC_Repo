Answer package com.lic.package.repository;import java.sql.Timestamp;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.data.jpa.repository.Modifying;import org.springframework.data.jpa.repository.Query;import org.springframework.data.repository.query.Param;import org.springframework.stereotype.Repository;import com.lic.package.entity.PolicySrvMbrApote;@Repositorypublic interface PolicySrvMbrApoteRepository extends JpaRepository<PolicySrvMbrApote, Long>{@Query("INSERT INTO POLICY_SRV_MBR_APOTE( APPOINTEE_ID, APPOINTEE_AADHAR_NUMBER, APPOINTEE_ACCOUNT_NUMBER, APPOINTEE_ACCOUNT_TYPE, APPOINTEE_CODE, APPOINTEE_NAME, APPOINTEE_BANK_NAME, CONTACT_NUMBER, CREATED_BY, CREATED_ON, DATE_OF_BIRTH, APPOINTEE_IFSC_CODE, IS_ACTIVE, MEMBER_ID, MODIFIED_BY, MODIFIED_ON, APPOINTEE_PAN, RELATIONSHIP) VALUES ( :appointeeId, :aadharNumber, :accountNumber, :accountType, :appointeeCode, :appointeeName, :bankName, :contactNumber, :createdBy, SYSTIMESTAMP, :dateOfBirth, :ifscCode, :isActive, :memberId, :modifiedBy, SYSTIMESTAMP, :pan, :relationship)")@Modifyingvoid createNewRecord(@Param("appointeeId") Long appointeeId, @Param("aadharNumber") String aadharNumber, @Param("accountNumber") String accountNumber, @Param("accountType") String accountType, @Param("appointeeCode") String appointeeCode, @Param("appointeeName") String appointeeName, @Param("bankName") String bankName, @Param("contactNumber") String contactNumber, @Param("createdBy") Long createdBy, @Param("dateOfBirth") Timestamp dateOfBirth, @Param("ifscCode") String ifscCode, @Param("isActive") Boolean isActive, @Param("memberId") Long memberId, @Param("modifiedBy") Long modifiedBy, @Param("pan") String pan, @Param("relationship") String relationship);@Query("UPDATE POLICY_SRV_MBR_APOTESET APPOINTEE_AADHAR_NUMBER = :aadharNumber, APPOINTEE_ACCOUNT_NUMBER = :accountNumber, APPOINTEE_ACCOUNT_TYPE = :accountType, APPOINTEE_CODE = :appointeeCode, APPOINTEE_NAME = :appointeeName, APPOINTEE_BANK_NAME = :bankName, CONTACT_NUMBER = :contactNumber, DATE_OF_BIRTH = :dateOfBirth, APPOINTEE_IFSC_CODE = :ifscCode, IS_ACTIVE = :isActive, MEMBER_ID = :memberId, MODIFIED_BY = :modifiedBy, MODIFIED_ON = SYSTIMESTAMP, APPOINTEE_PAN = :pan, RELATIONSHIP = :relationship WHERE APPOINTEE_ID = :appointeeId")@Modifyingvoid updateExistingRecord(@Param("aadharNumber") String aadharNumber, @Param("accountNumber") String accountNumber, @Param("accountType") String accountType, @Param("appointeeCode") String appointeeCode, @Param("appointeeName") String appointeeName, @Param("bankName") String bankName, @Param("contactNumber") String contactNumber, @Param("dateOfBirth") Timestamp dateOfBirth, @Param("ifscCode") String ifscCode, @Param("isActive") Boolean isActive, @Param("memberId") Long memberId, @Param("modifiedBy") Long modifiedBy, @Param("pan") String pan, @Param("relationship") String relationship, @Param("appointeeId") Long appointeeId);}